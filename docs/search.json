[
  {
    "objectID": "分析用R.html#企業価値評価における割引率の算出waccを用いたアプローチ",
    "href": "分析用R.html#企業価値評価における割引率の算出waccを用いたアプローチ",
    "title": "Valuation",
    "section": "企業価値評価における割引率の算出：WACCを用いたアプローチ",
    "text": "企業価値評価における割引率の算出：WACCを用いたアプローチ\n本稿では、ディスカウント・キャッシュフロー（DCF）法を用いた企業価値評価において不可欠な要素である割引率の算出に焦点を当てる。割引率には、企業の加重平均資本コスト（WACC: Weighted Average Cost of Capital）を用いることとし、その構成要素である負債コストと株主資本コストの算出方法について詳細に論じる。\n\n1. WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率\n\n\n\n\n2. WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n2.1. 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n## 鳥取銀行財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,303 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              25987 715020150311JP.csv\n 2     2 買入金銭債権                              499 715020150311JP.csv\n 3     3 有価証券                               103390 715020150311JP.csv\n 4     4 貸出金                                 258356 715020150311JP.csv\n 5     5 外国為替                                    5 715020150311JP.csv\n 6     6 リース債権及びリース投資資産             3580 715020150311JP.csv\n 7     7 その他資産                               1709 715020150311JP.csv\n 8     8 有形固定資産                             7060 715020150311JP.csv\n 9     9 建物                                      774 715020150311JP.csv\n10    10 土地                                     3918 715020150311JP.csv\n# ℹ 1,293 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n2.2. 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"借用金\" | df$項目 == \"社債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 4351567 \n\n\n\n\n\n2.3. 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 8416000 \nP &lt;- 459         \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 3862944000 \n\n\n\n\n\n2.4. 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.32 %\n\n\n\n\n\n2.5. 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\nリスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\nβ (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 1.08036867948469 # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 1.08 \n\n\n\n\n市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 8.35 %\n\n\n\n\n\n\n\n3. WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 8.341 %\n\n\n\n\n\n4. フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n4.1. フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額    FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 715020150315JP.csv     7787    -2086   9873\n 2 715020160315JP.csv    11044      741  10303\n 3 715020170315JP.csv      984    -3481   4465\n 4 715020180315JP.csv    -7252    10984 -18236\n 5 715020190315JP.csv   -16012     2709 -18721\n 6 715020200315JP.csv    31625   -22731  54356\n 7 715020210315JP.csv    52051    -9694  61745\n 8 715020220315JP.csv   -18986    -9470  -9516\n 9 715020230315JP.csv   -27555     2995 -30550\n10 715020240315JP.csv     6459     -794   7253\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]   9873  10303   4465 -18236 -18721  54356  61745  -9516 -30550   7253\n\n\n\n\n将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGR (過去 9年間): -3.37%\n \n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 7253 7253 7253 7253 7253\n\n\n\n\n\n4.2. ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 7253 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 86954 \n\n\n\n\n\n4.3. 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): 86954 \n\n\n\n\n\n時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 187.758 %"
  },
  {
    "objectID": "01_Valuation.html",
    "href": "01_Valuation.html",
    "title": "01_Valuation",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "01_Valuation.html#quarto",
    "href": "01_Valuation.html#quarto",
    "title": "01_Valuation",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "01_Valuation.html#running-code",
    "href": "01_Valuation.html#running-code",
    "title": "01_Valuation",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]