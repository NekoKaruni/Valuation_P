[
  {
    "objectID": "11_create_website.html",
    "href": "11_create_website.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "11_create_website.html#必要なツールのインストールと準備",
    "href": "11_create_website.html#必要なツールのインストールと準備",
    "title": "",
    "section": "1.1 1. 必要なツールのインストールと準備",
    "text": "1.1 1. 必要なツールのインストールと準備\n\n1.1.1 1-1. Gitのインストール\n\nGitはソースコードやドキュメントの変更履歴を管理するツールです。\n\nGit公式サイトからOSに合ったインストーラーをダウンロードし、インストールしてください。\n\n\n\n1.1.2 1-2. Rのインストール\n\nRは統計解析・データ分析向けのプログラミング言語です。\nCRAN（The Comprehensive R Archive Network）からOSに合ったインストーラーを入手してインストールします。\nインストール後、コマンドラインまたはRStudioからRを起動できることを確認してください。\n\n\n\n1.1.3 1-3. RStudioのインストール\n\nRStudioはRを使いやすくする統合開発環境（IDE）です。\nRStudio公式サイトからインストーラーを取得しインストール。\n\n\n\n1.1.4 1-4. Quartoのインストール\n\nQuartoはMarkdown形式で文章やサイトを生成するツールです。\nQuarto公式サイトからインストーラーをダウンロードしインストール。\nRStudioのターミナルやコマンドラインで以下を実行し、動作確認します。"
  },
  {
    "objectID": "11_create_website.html#githubアカウントの作成",
    "href": "11_create_website.html#githubアカウントの作成",
    "title": "",
    "section": "1.2 2. GitHubアカウントの作成",
    "text": "1.2 2. GitHubアカウントの作成\n\nGitHub公式サイトで無料アカウントを作成。\nメールアドレスが必要です。管理しやすい専用のメール（例：Gmail）を新規作成することを推奨します。\nアカウント作成後、ログインできることを確認してください。"
  },
  {
    "objectID": "11_create_website.html#githubリポジトリの作成",
    "href": "11_create_website.html#githubリポジトリの作成",
    "title": "",
    "section": "1.3 3. GitHubリポジトリの作成",
    "text": "1.3 3. GitHubリポジトリの作成\n\nGitHubにログインした状態で画面右上の「+」→「New repository」をクリック。\nリポジトリ名（例：Sophillium）を入力。\nPublic を選択（無料アカウントでも公開リポジトリは作成可能）。\n「Add a README file」にチェックを入れておくと説明文を書けて便利。\n「Create repository」をクリック。"
  },
  {
    "objectID": "11_create_website.html#rstudioでquartoプロジェクトを作成",
    "href": "11_create_website.html#rstudioでquartoプロジェクトを作成",
    "title": "",
    "section": "1.4 4. RStudioでQuartoプロジェクトを作成",
    "text": "1.4 4. RStudioでQuartoプロジェクトを作成\n\nRStudioを起動。\nメニューから「File」→「New Project」→「New Directory」→「Quarto Website」を選択。\nプロジェクト名（例：Sophillium）を入力。\n「Browse」ボタンから好きなフォルダに保存場所を選択。\n「Create Project」を押すと、新しいQuartoウェブサイトプロジェクトが作成されます。\n*私たちのRを参考にRStudioの設定をすることをおすすめします"
  },
  {
    "objectID": "11_create_website.html#quarto.yml-ファイルの編集",
    "href": "11_create_website.html#quarto.yml-ファイルの編集",
    "title": "",
    "section": "1.5 5. _quarto.yml ファイルの編集",
    "text": "1.5 5. _quarto.yml ファイルの編集\n\nプロジェクトのルートにある _quarto.yml はウェブサイト全体の設定ファイルです。\n例えば以下のように書きます。\n\n\noutput-dir はビルド後の静的サイトのファイル置き場で、GitHub Pagesで公開したいフォルダ名と一致させます。(docsでいい)\n\n\n\nnavbar でメニューのリンクを設定します。リンク先ファイル名は実際の .qmd ファイル名と完全に一致させる必要があります。\nページ作成（.qmdファイル）"
  },
  {
    "objectID": "11_create_website.html#ページ作成",
    "href": "11_create_website.html#ページ作成",
    "title": "",
    "section": "1.6 6.ページ作成",
    "text": "1.6 6.ページ作成\n\n各ページは .qmd 拡張子のMarkdownファイルで作成します。\n\n\n\n例：01_index.qmd、02_about.qmd のように番号を付けて管理すると順序がわかりやすいです。\nファイルの中身はMarkdown記法で文章を書き、必要に応じてRコードチャンクを埋め込み可能です。\n\n\n# x軸の値を生成\nx &lt;- seq(-4, 4, length=200)\n\n# 正規分布（平均0、標準偏差1）の確率密度関数\ny_norm &lt;- dnorm(x, mean=0, sd=1)\n\n# ガンマ分布（shape=2, rate=1）の確率密度関数（xは正の範囲で）\nx_gamma &lt;- seq(0, 10, length=200)\ny_gamma &lt;- dgamma(x_gamma, shape=2, rate=1)\n\n# ベータ分布（shape1=2, shape2=5）\nx_beta &lt;- seq(0, 1, length=200)\ny_beta &lt;- dbeta(x_beta, shape1=2, shape2=5)\n\n# プロット設定\npar(mfrow=c(3,1), mar=c(4,4,2,1))  # 3行1列に並べる\n\n# 正規分布のプロット\nplot(x, y_norm, type=\"l\", col=\"blue\", lwd=2, main=\"標準正規分布\", ylab=\"密度\", xlab=\"x\")\n\n# ガンマ分布のプロット\nplot(x_gamma, y_gamma, type=\"l\", col=\"red\", lwd=2, main=\"ガンマ分布 (shape=2, rate=1)\", ylab=\"密度\", xlab=\"x\")\n\n# ベータ分布のプロット\nplot(x_beta, y_beta, type=\"l\", col=\"green\", lwd=2, main=\"ベータ分布 (shape1=2, shape2=5)\", ylab=\"密度\", xlab=\"x\")"
  },
  {
    "objectID": "11_create_website.html#プレビューとビルド",
    "href": "11_create_website.html#プレビューとビルド",
    "title": "",
    "section": "1.7 7.プレビューとビルド",
    "text": "1.7 7.プレビューとビルド\n\n個別ページのプレビュー\nRStudioで .qmd ファイルを開き、「Render」ボタンを押すとブラウザにプレビューが表示されます。\n文章やレイアウトの確認に便利です。\nサイト全体のビルド\nターミナル（RStudioのターミナルまたはコマンドプロンプト）を開き、プロジェクトのルートで以下を実行。\n\n\nquarto render\n\n\n_quarto.yml で指定した output-dir フォルダ（例：docs）にサイトのHTMLなどのファイル一式が生成されます。"
  },
  {
    "objectID": "11_create_website.html#githubとrstudioの連携設定",
    "href": "11_create_website.html#githubとrstudioの連携設定",
    "title": "",
    "section": "1.8 8.GitHubとRStudioの連携設定",
    "text": "1.8 8.GitHubとRStudioの連携設定\n\nGitの初期化（初回のみ）\nRStudioの「Git」タブが表示されていない場合、Git管理が有効になっていません。\nプロジェクトのルートフォルダでターミナルを開き、以下を実行します。\n\n\ngit init\ngit remote add origin https://github.com/あなたのユーザー名/リポジトリ名.git\n\n\nRStudioでGit操作\nRStudioの右上の「Git」タブから変更ファイルのステージング（チェックボックスにチェック）、コミットメッセージ入力、コミット、プッシュができます。\n初回プッシュ時はパスワードの代わりにGitHubで作成したパーソナルアクセストークン（PAT）を使用することが多いです。\nGitHub Pagesの設定\nGitHubのリポジトリ画面にアクセスし、「Settings」→「Pages」へ移動。\n「Source」のプルダウンで「Branch: main」「Folder: /docs」を選択し、「Save」ボタンを押します。\n数分待つとウェブサイトが https://あなたのユーザー名.github.io/リポジトリ名/ で公開されます。"
  },
  {
    "objectID": "11_create_website.html#更新時の作業手順",
    "href": "11_create_website.html#更新時の作業手順",
    "title": "",
    "section": "1.9 9.更新時の作業手順",
    "text": "1.9 9.更新時の作業手順\nローカルで .qmd ファイルを編集。\nRStudioで quarto render を実行しサイトをビルド（または「Render」ボタンで個別に確認）。\n変更をGitでコミット。\n\ngit add .\ngit commit -m “Update website content”\n\nGitHubにプッシュ。 &gt; git push origin main\nGitHub Pagesが自動的に更新されるのを待つ。\n\n他の端末でリモートレポジトリの変更を行った際は競合を避けるためエラーになるので。レポジトリとローカルの内容を合わせてからPush\n\n最新の変更をリモートから取得\n\ngit pull origin main –rebase\n\nコンフリクトがあれば解決し、なければそのままpush\n\ngit push origin main"
  },
  {
    "objectID": "11_create_website.html#トラブルシューティング注意点",
    "href": "11_create_website.html#トラブルシューティング注意点",
    "title": "",
    "section": "1.10 10. トラブルシューティング・注意点",
    "text": "1.10 10. トラブルシューティング・注意点\n\nリンク先ファイル名の不一致\n\n\n\n_quarto.yml のナビゲーションと .qmd のファイル名が違うとエラーになります。\n\nファイル名を変更したら必ず _quarto.yml も修正してください。\n\n\nGitのpushが拒否される\n\n\n\nリモートリポジトリに自分のローカルにない変更がある場合、git push が失敗します。\n\n先に以下を実行し、変更を取り込んでください。\n\n\ngit pull origin main\n\n\nコンフリクトがあれば手動で解消し、再度pushします。\n\n\nGitHub Pagesに成果物が表示されない\n\n\n\nGitHubのPages設定が正しいか（ブランチとフォルダ）必ず確認してください。\n\nQuartoのビルド成果物が指定フォルダにあるかも重要です。"
  },
  {
    "objectID": "11_create_website.html#まとめ",
    "href": "11_create_website.html#まとめ",
    "title": "",
    "section": "1.11 11. まとめ",
    "text": "1.11 11. まとめ\n\nGit, R, RStudio, Quartoの準備 → GitHubアカウント作成\n\nGitHubリポジトリ作成 → RStudioでQuartoプロジェクト作成\n\n_quarto.yml編集でサイト設定 → .qmdでページ作成\n\nquarto renderでサイト生成 → Gitでコミット・プッシュ\n\nGitHub Pages設定で公開完了\n\nこの流れであなたのウェブサイトが自分で作れて、GitHubを使った公開まで自動化できます！\n\n参考リンク\n- Git公式サイト：https://git-scm.com/\n- R公式サイト：https://cran.r-project.org/\n- RStudio公式サイト：https://posit.co/download/rstudio-desktop/\n- Quarto公式サイト：https://quarto.org/docs/\n- GitHub公式サイト：https://github.com/\n- GitHub Pagesの使い方：https://docs.github.com/en/pages/getting-started-with-github-pages\n- 私たちのR：https://www.jaysong.net/RBook/aboutr.html"
  },
  {
    "objectID": "04_8563_DDM.html",
    "href": "04_8563_DDM.html",
    "title": "8563_大東銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8563_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35   151505\n2    36   149410\n3    39     1017\n4    40    37147\n5    41    33245\n6    44     6355\n7    45     6344\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.801695869\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 6.601 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 15,547.83 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 6,344 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,805.05 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 3,398.77 百万円"
  },
  {
    "objectID": "04_8563_DDM.html#残余利益モデルの概要",
    "href": "04_8563_DDM.html#残余利益モデルの概要",
    "title": "8563_大東銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8563_DDM.html#前提データの準備",
    "href": "04_8563_DDM.html#前提データの準備",
    "title": "8563_大東銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8563_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35   151505\n2    36   149410\n3    39     1017\n4    40    37147\n5    41    33245\n6    44     6355\n7    45     6344\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.801695869\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 6.601 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 15,547.83 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 6,344 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,805.05 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 3,398.77 百万円"
  },
  {
    "objectID": "04_8542_DDM.html",
    "href": "04_8542_DDM.html",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8542_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37   102245\n2    38   102436\n3    39   178644\n4    40    35537\n5    42     2926\n6    43     2750\n7    44    12613\n8    45     4376\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.55995099\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.084 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 39,257.58 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,376 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 8,718.5 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 26,163.08 百万円"
  },
  {
    "objectID": "04_8542_DDM.html#残余利益モデルの概要",
    "href": "04_8542_DDM.html#残余利益モデルの概要",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8542_DDM.html#前提データの準備",
    "href": "04_8542_DDM.html#前提データの準備",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8542_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37   102245\n2    38   102436\n3    39   178644\n4    40    35537\n5    42     2926\n6    43     2750\n7    44    12613\n8    45     4376\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.55995099\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.084 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 39,257.58 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,376 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 8,718.5 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 26,163.08 百万円"
  },
  {
    "objectID": "04_8416_DDM.html",
    "href": "04_8416_DDM.html",
    "title": "8416_高知銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8416_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 4 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    39   300179\n2    40   310494\n3    43    48747\n4    44    28478\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.873145223\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 7.05 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 5,839.82 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 28,478 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -2,887.34 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -19,750.84 百万円"
  },
  {
    "objectID": "04_8416_DDM.html#残余利益モデルの概要",
    "href": "04_8416_DDM.html#残余利益モデルの概要",
    "title": "8416_高知銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8416_DDM.html#前提データの準備",
    "href": "04_8416_DDM.html#前提データの準備",
    "title": "8416_高知銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8416_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 4 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    39   300179\n2    40   310494\n3    43    48747\n4    44    28478\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.873145223\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 7.05 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 5,839.82 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 28,478 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -2,887.34 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -19,750.84 百万円"
  },
  {
    "objectID": "04_8365_DDM.html",
    "href": "04_8365_DDM.html",
    "title": "8365_富山銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8365_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    36    21758\n2    37    43194\n3    38    24923\n4    39   128540\n5    40    35814\n6    41    23233\n7    42    10183\n8    43    31426\n9    44     4638\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.088892856\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.404 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 4,789.85 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,638 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 2,489.59 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -2,337.74 百万円"
  },
  {
    "objectID": "04_8365_DDM.html#残余利益モデルの概要",
    "href": "04_8365_DDM.html#残余利益モデルの概要",
    "title": "8365_富山銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8365_DDM.html#前提データの準備",
    "href": "04_8365_DDM.html#前提データの準備",
    "title": "8365_富山銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8365_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    36    21758\n2    37    43194\n3    38    24923\n4    39   128540\n5    40    35814\n6    41    23233\n7    42    10183\n8    43    31426\n9    44     4638\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.088892856\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.404 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 4,789.85 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,638 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 2,489.59 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -2,337.74 百万円"
  },
  {
    "objectID": "04_7161_DDM.html",
    "href": "04_7161_DDM.html",
    "title": "7161_じもとHD",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38   210683\n2    39   112612\n3    40   337714\n4    41   218265\n5    42   -49786\n6    43   210522\n7    44    -5698\n8    45    11488\n9    47    19472\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.384913011\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 3.986 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: -596,209.1 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 19,472 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,563.84 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -621,244.9 百万円"
  },
  {
    "objectID": "04_7161_DDM.html#残余利益モデルの概要",
    "href": "04_7161_DDM.html#残余利益モデルの概要",
    "title": "7161_じもとHD",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_7161_DDM.html#前提データの準備",
    "href": "04_7161_DDM.html#前提データの準備",
    "title": "7161_じもとHD",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38   210683\n2    39   112612\n3    40   337714\n4    41   218265\n5    42   -49786\n6    43   210522\n7    44    -5698\n8    45    11488\n9    47    19472\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.384913011\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 3.986 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: -596,209.1 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 19,472 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,563.84 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -621,244.9 百万円"
  },
  {
    "objectID": "03_8563_RIM.html",
    "href": "03_8563_RIM.html",
    "title": "8563_大東銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8563_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35   151505\n2    36   149410\n3    39     1017\n4    40    37147\n5    41    33245\n6    44     6355\n7    45     6344\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.801695869\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 6.601 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 15,547.83 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 6,344 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,805.05 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 3,398.77 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "03_8563_RIM.html#残余利益モデルの概要",
    "href": "03_8563_RIM.html#残余利益モデルの概要",
    "title": "8563_大東銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "03_8563_RIM.html#前提データの準備",
    "href": "03_8563_RIM.html#前提データの準備",
    "title": "8563_大東銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8563_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35   151505\n2    36   149410\n3    39     1017\n4    40    37147\n5    41    33245\n6    44     6355\n7    45     6344\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.801695869\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 6.601 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    37             2272\n 2    41             2591\n 3    38             1495\n 4    37             1308\n 5    36             1267\n 6    35             1073\n 7    36             1008\n 8    37             1222\n 9    36             1311\n10    34             1270\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 15,547.83 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 6,344 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,805.05 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 3,398.77 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "03_8542_RIM.html",
    "href": "03_8542_RIM.html",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8542_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37   102245\n2    38   102436\n3    39   178644\n4    40    35537\n5    42     2926\n6    43     2750\n7    44    12613\n8    45     4376\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.55995099\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.084 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 39,257.58 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,376 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 8,718.5 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 26,163.08 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "03_8542_RIM.html#残余利益モデルの概要",
    "href": "03_8542_RIM.html#残余利益モデルの概要",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "03_8542_RIM.html#前提データの準備",
    "href": "03_8542_RIM.html#前提データの準備",
    "title": "8542_トマト銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8542_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37   102245\n2    38   102436\n3    39   178644\n4    40    35537\n5    42     2926\n6    43     2750\n7    44    12613\n8    45     4376\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.55995099\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.084 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             1662\n2    38             1843\n3    41             1912\n4    40             1556\n5    42             1753\n6    40             1371\n7    38             1519\n8    36             1879\n9    35             1530\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 39,257.58 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,376 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 8,718.5 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 26,163.08 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "03_8416_RIM.html",
    "href": "03_8416_RIM.html",
    "title": "8416_高知銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8416_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 4 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    39   300179\n2    40   310494\n3    43    48747\n4    44    28478\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.873145223\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 7.05 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 5,839.82 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 28,478 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -2,887.34 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -19,750.84 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "03_8416_RIM.html#残余利益モデルの概要",
    "href": "03_8416_RIM.html#残余利益モデルの概要",
    "title": "8416_高知銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "03_8416_RIM.html#前提データの準備",
    "href": "03_8416_RIM.html#前提データの準備",
    "title": "8416_高知銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8416_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 4 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    39   300179\n2    40   310494\n3    43    48747\n4    44    28478\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.873145223\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 7.05 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             3922\n 2    38             3105\n 3    36             2307\n 4    39             1828\n 5    37              996\n 6    36             1468\n 7    38              943\n 8    38             1701\n 9    38             1666\n10    37             1358\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 5,839.82 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 28,478 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -2,887.34 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -19,750.84 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "03_8365_RIM.html",
    "href": "03_8365_RIM.html",
    "title": "8365_富山銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8365_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    36    21758\n2    37    43194\n3    38    24923\n4    39   128540\n5    40    35814\n6    41    23233\n7    42    10183\n8    43    31426\n9    44     4638\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.088892856\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.404 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 4,789.85 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,638 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 2,489.59 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -2,337.74 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "03_8365_RIM.html#残余利益モデルの概要",
    "href": "03_8365_RIM.html#残余利益モデルの概要",
    "title": "8365_富山銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "03_8365_RIM.html#前提データの準備",
    "href": "03_8365_RIM.html#前提データの準備",
    "title": "8365_富山銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8365_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    36    21758\n2    37    43194\n3    38    24923\n4    39   128540\n5    40    35814\n6    41    23233\n7    42    10183\n8    43    31426\n9    44     4638\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.088892856\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.404 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    35             1261\n 2    33             1070\n 3    34             1242\n 4    36             1370\n 5    36             1441\n 6    35              738\n 7    37              587\n 8    37              357\n 9    37              996\n10    35              648\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 4,789.85 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 4,638 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 2,489.59 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -2,337.74 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "03_7161_RIM.html",
    "href": "03_7161_RIM.html",
    "title": "7161_じもとHD",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38   210683\n2    39   112612\n3    40   337714\n4    41   218265\n5    42   -49786\n6    43   210522\n7    44    -5698\n8    45    11488\n9    47    19472\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.384913011\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 3.986 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: -596,209.1 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 19,472 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,563.84 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -621,244.9 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "03_7161_RIM.html#残余利益モデルの概要",
    "href": "03_7161_RIM.html#残余利益モデルの概要",
    "title": "7161_じもとHD",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "03_7161_RIM.html#前提データの準備",
    "href": "03_7161_RIM.html#前提データの準備",
    "title": "7161_じもとHD",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38   210683\n2    39   112612\n3    40   337714\n4    41   218265\n5    42   -49786\n6    43   210522\n7    44    -5698\n8    45    11488\n9    47    19472\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.384913011\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 3.986 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    39             5986\n2    41             4891\n3    40             4637\n4    39             3027\n5    39             1709\n6    39             1738\n7    39            -3175\n8    39             2593\n9    40            -7078\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: -596,209.1 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 19,472 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 5,563.84 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -621,244.9 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "02_8563.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8563.html#wacc加重平均資本コストの定義と重要性",
    "title": "8563_大東銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "02_8563.html#waccの構成要素の算出",
    "href": "02_8563.html#waccの構成要素の算出",
    "title": "8563_大東銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8563_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,296 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              70944 856320150311JP.csv\n 2     2 コールローン及び買入手形                 5000 856320150311JP.csv\n 3     3 有価証券                               234701 856320150311JP.csv\n 4     4 貸出金                                 472194 856320150311JP.csv\n 5     5 外国為替                                  337 856320150311JP.csv\n 6     6 リース債権及びリース投資資産             1995 856320150311JP.csv\n 7     7 その他資産                               3291 856320150311JP.csv\n 8     8 有形固定資産                            12932 856320150311JP.csv\n 9     9 建物                                     2297 856320150311JP.csv\n10    10 土地                                     9646 856320150311JP.csv\n# ℹ 1,286 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"譲渡性預金\"  |df$項目 == \"借用金\" |df$項目==\"社債\"|df$項目==\"その他負債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 8047847 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 12701000\nP &lt;- 729          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 9259029000 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"その他の支払利息\"|df$項目==\"コールマネー利息及び売渡手形利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.075 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.801695869\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.802 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 6.601 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "02_8563.html#waccの最終算出",
    "href": "02_8563.html#waccの最終算出",
    "title": "8563_大東銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 6.596 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "02_8563.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8563.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8563_大東銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額     FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 856320150315JP.csv     8415    10252   -1837\n 2 856320160315JP.csv   -11904    -3518   -8386\n 3 856320170315JP.csv    -3266     8523  -11789\n 4 856320180315JP.csv   -15481    -4083  -11398\n 5 856320190315JP.csv   -21118    24111  -45229\n 6 856320200315JP.csv    -2256    13876  -16132\n 7 856320210315JP.csv   113437     2134  111303\n 8 856320220315JP.csv   -33868     4577  -38445\n 9 856320230315JP.csv   -92826    31352 -124178\n10 856320240315JP.csv    -9113     9423  -18536\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]   -1837   -8386  -11789  -11398  -45229  -16132  111303  -38445 -124178\n[10]  -18536\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] -18536 -18536 -18536 -18536 -18536\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): -18536 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): -281032 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): -281032 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 -200.194 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8563_大東銀行"
    ]
  },
  {
    "objectID": "02_8542.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8542.html#wacc加重平均資本コストの定義と重要性",
    "title": "8542_トマト銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "02_8542.html#waccの構成要素の算出",
    "href": "02_8542.html#waccの構成要素の算出",
    "title": "8542_トマト銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,414 × 4\n      No 項目         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金              62783 853720150311JP.csv\n 2     2 商品有価証券              155 853720150311JP.csv\n 3     3 金銭の信託               2987 853720150311JP.csv\n 4     4 有価証券               361946 853720150311JP.csv\n 5     5 貸出金                 947038 853720150311JP.csv\n 6     6 外国為替                 2601 853720150311JP.csv\n 7     7 その他資産               9598 853720150311JP.csv\n 8     8 有形固定資産            14475 853720150311JP.csv\n 9     9 建物                     3076 853720150311JP.csv\n10    10 土地                    10539 853720150311JP.csv\n# ℹ 1,404 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"譲渡性預金\"  |df$項目 == \"借用金\"|df$項目==\"コールマネー及び売渡手形\"|df$項目==\"外国為替\"|df$項目==\"社債\"|df$項目==\"その他負債\" ,]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 14450997 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 11679 + 1000\nP &lt;- 1277          \n# 時価総額の計算\nE &lt;- N * P\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 16191083 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"その他の支払利息\"|df$項目==\"コールマネー利息及び売渡手形利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.099 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.55995099\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.56 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 5.084 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "02_8542.html#waccの最終算出",
    "href": "02_8542.html#waccの最終算出",
    "title": "8542_トマト銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 2.722 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "02_8542.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8542.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8542_トマト銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額     FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 853720150315JP.csv   -19939    10642  -30581\n 2 853720160315JP.csv    13927   -10613   24540\n 3 853720170315JP.csv    -5855    25415  -31270\n 4 853720180315JP.csv       26   -11718   11744\n 5 853720190315JP.csv    44927    -3486   48413\n 6 853720200315JP.csv     -647   -12460   11813\n 7 853720210315JP.csv   143439    -1667  145106\n 8 853720220315JP.csv    -4192    10626  -14818\n 9 853720230315JP.csv  -139400     6615 -146015\n10 853720240315JP.csv     1598   -19399   20997\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]  -30581   24540  -31270   11744   48413   11813  145106  -14818 -146015\n[10]   20997\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 20997 20997 20997 20997 20997\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 20997 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 771341 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): 771341 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 129682.5 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8542_トマト銀行"
    ]
  },
  {
    "objectID": "02_8416.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8416.html#wacc加重平均資本コストの定義と重要性",
    "title": "8416_高知銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "02_8416.html#waccの構成要素の算出",
    "href": "02_8416.html#waccの構成要素の算出",
    "title": "8416_高知銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8416_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,384 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              47150 841620150311JP.csv\n 2     2 金銭の信託                               1069 841620150311JP.csv\n 3     3 有価証券                               308966 841620150311JP.csv\n 4     4 貸出金                                 672592 841620150311JP.csv\n 5     5 外国為替                                 1074 841620150311JP.csv\n 6     6 リース債権及びリース投資資産             7330 841620150311JP.csv\n 7     7 その他資産                               7363 841620150311JP.csv\n 8     8 有形固定資産                            15553 841620150311JP.csv\n 9     9 建物                                     3742 841620150311JP.csv\n10    10 土地                                    10795 841620150311JP.csv\n# ℹ 1,374 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"外国為替\"  |df$項目 == \"借用金\" ,]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 10227343 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 10244000 + 680\nP &lt;- 805           \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 8246967400 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"コールマネー利息及び売渡手形利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"その他の支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.19 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.873145223\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.873 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 7.05 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "02_8416.html#waccの最終算出",
    "href": "02_8416.html#waccの最終算出",
    "title": "8416_高知銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 7.041 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "02_8416.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8416.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8416_高知銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額    FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 841620150315JP.csv    17828    -1290  19118\n 2 841620160315JP.csv    -1010    -2010   1000\n 3 841620170315JP.csv    26874    -7439  34313\n 4 841620180315JP.csv    19187    -4084  23271\n 5 841620190315JP.csv   -20315    10291 -30606\n 6 841620200315JP.csv    18194    -3032  21226\n 7 841620210315JP.csv    80494     -513  81007\n 8 841620220315JP.csv   -34283     2488 -36771\n 9 841620230315JP.csv   -31976     6114 -38090\n10 841620240315JP.csv   -22071    -5936 -16135\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]  19118   1000  34313  23271 -30606  21226  81007 -36771 -38090 -16135\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] -16135 -16135 -16135 -16135 -16135\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): -16135 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): -229150 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): -229150 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 -195.648 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8416_高知銀行"
    ]
  },
  {
    "objectID": "02_8365.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8365.html#wacc加重平均資本コストの定義と重要性",
    "title": "8365_富山銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "02_8365.html#waccの構成要素の算出",
    "href": "02_8365.html#waccの構成要素の算出",
    "title": "8365_富山銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8365_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,305 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              28430 836520150311JP.csv\n 2     2 有価証券                               166365 836520150311JP.csv\n 3     3 貸出金                                 273589 836520150311JP.csv\n 4     4 外国為替                                  680 836520150311JP.csv\n 5     5 リース債権及びリース投資資産             3795 836520150311JP.csv\n 6     6 その他資産                               2210 836520150311JP.csv\n 7     7 有形固定資産                             4645 836520150311JP.csv\n 8     8 建物                                     1012 836520150311JP.csv\n 9     9 土地                                     3313 836520150311JP.csv\n10    10 リース資産                                  7 836520150311JP.csv\n# ℹ 1,295 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" |df$項目 == \"借用金\" ,]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 4698015 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 5444000\nP &lt;- 1550          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\",round(E / 100000000 ,2),\"億円\\n\")\n\n時価総額 (E): 84.38 億円\n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"債権貸借取引支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.067 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 1.088892856\n\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 1.089 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 8.404 %\n\n\n\n\n\n1.2.10 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 8.399 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "02_8365.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8365.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8365_富山銀行",
    "section": "1.3 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.3 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.3.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額    FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 836520150315JP.csv    25178    -4809  29987\n 2 836520160315JP.csv    -2581    18025 -20606\n 3 836520170315JP.csv    -2743    -2062   -681\n 4 836520180315JP.csv     2858     2890    -32\n 5 836520190315JP.csv    -8514     7215 -15729\n 6 836520200315JP.csv   -11156    16654 -27810\n 7 836520210315JP.csv    11688   -19213  30901\n 8 836520220315JP.csv    11281   -13302  24583\n 9 836520230315JP.csv   -19220    13789 -33009\n10 836520240315JP.csv     2641      972   1669\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]  29987 -20606   -681    -32 -15729 -27810  30901  24583 -33009   1669\n\n\n\n\n1.3.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGR (過去 9年間): -27.45%\n \n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 1669 1669 1669 1669 1669\n\n\n\n\n\n1.3.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 1669 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 19871 \n\n\n\n\n\n1.3.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation/100,2), \"億円\\n\")\n\nDCF法による企業価値評価 (Valuation): 198.71 億円\n\n\n\n\n\n1.3.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 19.779 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8365_富山銀行"
    ]
  },
  {
    "objectID": "02_7161.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_7161.html#wacc加重平均資本コストの定義と重要性",
    "title": "7161_じもとHD",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "02_7161.html#waccの構成要素の算出",
    "href": "02_7161.html#waccの構成要素の算出",
    "title": "7161_じもとHD",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,437 × 4\n      No 項目         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金             159638 716120150311JP.csv\n 2     2 買入金銭債権              838 716120150311JP.csv\n 3     3 商品有価証券               26 716120150311JP.csv\n 4     4 有価証券               752854 716120150311JP.csv\n 5     5 貸出金                1600381 716120150311JP.csv\n 6     6 外国為替                  548 716120150311JP.csv\n 7     7 その他資産               6639 716120150311JP.csv\n 8     8 有形固定資産            24899 716120150311JP.csv\n 9     9 建物                     7907 716120150311JP.csv\n10    10 土地                    14406 716120150311JP.csv\n# ℹ 1,427 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"譲渡性預金\" |df$項目==\"新株予約権付社債\" |df$項目 == \"借用金\" | df$項目 == \"社債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 24366624 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 72840263\nP &lt;- 346         \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 25202730998 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"コールマネー利息及び売渡手形利息\"|df$項目==\"その他の支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.117 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.384913011\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.385 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 3.986 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "02_7161.html#waccの最終算出",
    "href": "02_7161.html#waccの最終算出",
    "title": "7161_じもとHD",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 3.982 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "02_7161.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_7161.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "7161_じもとHD",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額     FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 716120150315JP.csv    20043   -14532   34575\n 2 716120160315JP.csv   -80784    58344 -139128\n 3 716120170315JP.csv    20683    42855  -22172\n 4 716120180315JP.csv   -63585    32639  -96224\n 5 716120190315JP.csv   -73709    84546 -158255\n 6 716120200315JP.csv    -7023    35390  -42413\n 7 716120210315JP.csv    96884   -84955  181839\n 8 716120220315JP.csv    28964    -7983   36947\n 9 716120230315JP.csv   -19967    19549  -39516\n10 716120240315JP.csv   -13850   129915 -143765\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]   34575 -139128  -22172  -96224 -158255  -42413  181839   36947  -39516\n[10] -143765\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] -143765 -143765 -143765 -143765 -143765\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): -143765 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): -3610445 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): -3610445 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 -570.434 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7161_じもとHD"
    ]
  },
  {
    "objectID": "00_Valuation.html",
    "href": "00_Valuation.html",
    "title": "DCF法",
    "section": "",
    "text": "DCF法(Discounted Cash Flow)は企業価値評価の代表的手法の一つです。企業や事業が将来生み出すと予測されているフリーキャッシュフロー(FCF)を適切な割引率で現在価値に割引き合計することで、企業や事業の価値を算出します。\n現在の10000円は将来の10000円よりも価値があるという、貨幣の時間価値の概念に基づき、将来のキャッシュフローを現在の価値に換算し、評価します。現在の10000円と将来の10000円では価値が変化します。",
    "crumbs": [
      "企業価値評価",
      "DCF法"
    ]
  },
  {
    "objectID": "00_Valuation.html#dcf法とは",
    "href": "00_Valuation.html#dcf法とは",
    "title": "DCF法",
    "section": "",
    "text": "DCF法(Discounted Cash Flow)は企業価値評価の代表的手法の一つです。企業や事業が将来生み出すと予測されているフリーキャッシュフロー(FCF)を適切な割引率で現在価値に割引き合計することで、企業や事業の価値を算出します。\n現在の10000円は将来の10000円よりも価値があるという、貨幣の時間価値の概念に基づき、将来のキャッシュフローを現在の価値に換算し、評価します。現在の10000円と将来の10000円では価値が変化します。",
    "crumbs": [
      "企業価値評価",
      "DCF法"
    ]
  },
  {
    "objectID": "00_Valuation.html#将来の10000円の現在価値を求める式",
    "href": "00_Valuation.html#将来の10000円の現在価値を求める式",
    "title": "DCF法",
    "section": "2 将来の10,000円の現在価値を求める式",
    "text": "2 将来の10,000円の現在価値を求める式\n将来の10,000円（例えば10年後）が、現在価値に換算するといくらになるかを計算する。\n\n2.1 各項目の意味\n\nPV: 現在価値 (Present Value)\nFV: 将来価値 (Future Value) - ここでは10,000円\nr: 割引率 (Discount Rate) - 年利や要求利回りなど、貨幣の時間的価値とリスクを考慮した率　今回は無リスク金利と呼ばれる日本国債利回り1%として\nn: 期間 (Number of Periods) - 将来の時点までの年数　\n\n\n\n2.2 具体例（割引率1%、期間10年の場合）\n例えば、割引率を年利1% (r=0.01)、期間を10年 (n=10) と仮定して、将来の10,000円の現在価値を計算すると以下のようになります。\n\\[\n\\begin{aligned}\nPV = \\frac{10000}{(1 + 0.01)^{10}}\\\\\nPV = \\frac{10000}{(1.01)^{10}}\\\\\nPV =\\frac{10000}{1.104622}\\\\\nPV≈9052.8 7\n\\end{aligned}\n\\]\n計算結果は割引率1%を考慮すると、10年後の10000円は現在の9053円に値するということを意味する。",
    "crumbs": [
      "企業価値評価",
      "DCF法"
    ]
  },
  {
    "objectID": "00_RIM.html",
    "href": "00_RIM.html",
    "title": "RIM法",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[\n\\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*}\n\\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\n\\(A_t\\)：\\(t\\)期の当期純利益\n\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[\nC_t = C_{t-1} + A_t - d_t\\\n\\]",
    "crumbs": [
      "企業価値評価",
      "RIM法"
    ]
  },
  {
    "objectID": "00_RIM.html#残余利益モデルrim",
    "href": "00_RIM.html#残余利益モデルrim",
    "title": "RIM法",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[\n\\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*}\n\\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\n\\(A_t\\)：\\(t\\)期の当期純利益\n\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[\nC_t = C_{t-1} + A_t - d_t\\\n\\]",
    "crumbs": [
      "企業価値評価",
      "RIM法"
    ]
  },
  {
    "objectID": "00_About_Valuation.html",
    "href": "00_About_Valuation.html",
    "title": "企業価値評価とは",
    "section": "",
    "text": "グローバル経済において、企業の合併・買収(M&A)や新規株式公開(IPO)、資金調達といった場面において、企業価値評価は不可欠なプロセスとして位置づけられる。企業価値評価の基本的な概念、学術的、実務的意義として何があげられるのだろうか\n\n企業価値評価は、企業の事業戦略、財務状態、マクロ経済環境といった要素を統合的に分析する。"
  },
  {
    "objectID": "00_About_Valuation.html#はじめに",
    "href": "00_About_Valuation.html#はじめに",
    "title": "企業価値評価とは",
    "section": "",
    "text": "グローバル経済において、企業の合併・買収(M&A)や新規株式公開(IPO)、資金調達といった場面において、企業価値評価は不可欠なプロセスとして位置づけられる。企業価値評価の基本的な概念、学術的、実務的意義として何があげられるのだろうか\n\n企業価値評価は、企業の事業戦略、財務状態、マクロ経済環境といった要素を統合的に分析する。"
  },
  {
    "objectID": "00_About_Valuation.html#企業価値評価の定義と目的",
    "href": "00_About_Valuation.html#企業価値評価の定義と目的",
    "title": "企業価値評価とは",
    "section": "2 企業価値評価の定義と目的",
    "text": "2 企業価値評価の定義と目的\n\n企業価値評価とは何か？\n企業価値表評価とは、特定の時点における企業の経済的価値を貨幣単位で算定するプロセスを指します。企業の帳簿上の資産価値を算出するものではなく、企業が将来にわたって生み出すとされる利益をを評価するなど将来を見据えた分析手法となっています。\n企業価値は量的なデータを中心として分析されますが、質的データも考慮する必要があります。\n企業価値評価の主要な目的\n\n\nM&A(企業の合併、買収)：買収対象企業の適正な価格を算定し、買収プレミアムの妥当性を判断する際の情報となる、売り手も自社価値を客観的に提示するために評価を行います。\n資金調達（エクイティ・ファイナンス）： 新規株式発行による増資や、未公開企業の株式公開（IPO）に際して、投資家への情報提供と株価設定の根拠として用いられます。投資家は、企業価値評価を基に投資判断を行います。\n事業戦略・経営意思決定：企業内部においては、事業ポートフォリオの見直し、新規事業への投資判断、不採算事業からの撤退判断など、経営資源の最適配分に関する戦略的意思決定の根拠として活用されます。\n組織再編・事業承継： 会社分割、株式交換・移転、事業譲渡といった組織再編時や、非上場企業の事業承継時における株主間の利害調整や課税評価の基礎となります。"
  },
  {
    "objectID": "00_Exponsmooth.html",
    "href": "00_Exponsmooth.html",
    "title": "指数平滑法",
    "section": "",
    "text": "指数平滑法は過去のデータを下に未来の値を予測するための手法であり、特に時系列データの分析において重要な役割を果たしています。\n指数平滑法を用いることで、データの変動を考慮しながら、より正確な予測が可能となります。"
  },
  {
    "objectID": "00_Exponsmooth.html#指数平滑法exponential-smoothing",
    "href": "00_Exponsmooth.html#指数平滑法exponential-smoothing",
    "title": "指数平滑法",
    "section": "",
    "text": "指数平滑法は過去のデータを下に未来の値を予測するための手法であり、特に時系列データの分析において重要な役割を果たしています。\n指数平滑法を用いることで、データの変動を考慮しながら、より正確な予測が可能となります。"
  },
  {
    "objectID": "00_Exponsmooth.html#単純指数平滑法",
    "href": "00_Exponsmooth.html#単純指数平滑法",
    "title": "指数平滑法",
    "section": "2 単純指数平滑法",
    "text": "2 単純指数平滑法\n\\[\nS_t = \\alpha Y_t + (1 - \\alpha) S_{t-1}\n\\]\n展開すると次のようになります：\n\\[\n\\begin{aligned}\nS_t &= \\alpha Y_t + (1 - \\alpha) S_{t-1} \\\\\n    &= \\alpha Y_t + \\alpha (1 - \\alpha) Y_{t-1} + \\alpha (1 - \\alpha)^2 Y_{t-2} + \\cdots\n\\end{aligned}\n\\]\n\n2.1 記号の意味\n\n\\(S_t\\): 時点 \\(t\\) における平滑化された値（予測値）\n\n\\(Y_t\\): 時点 \\(t\\) の実測値\n\n\\(S_{t-1}\\): 前期の平滑化値\n\n\\(\\alpha\\): 平滑化係数（\\(0 &lt; \\alpha &lt; 1\\)）"
  },
  {
    "objectID": "00_Exponsmooth.html#αの選択",
    "href": "00_Exponsmooth.html#αの選択",
    "title": "指数平滑法",
    "section": "3 αの選択",
    "text": "3 αの選択\nαの値は0から1の間であり、1に近いほど直近のデータが重視されます。最近のトレンドを重視する場合は1よりに、長期的に変化が少ないようなデータであれば、αの値を0に近くしても良いと思われる。"
  },
  {
    "objectID": "00_TOPIX.html",
    "href": "00_TOPIX.html",
    "title": "TOPIX",
    "section": "",
    "text": "library(\"tidyverse\")\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nTOPIX &lt;- read_csv(\"^tpx_y.csv\")\n\nRows: 57 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (5): Open, High, Low, Close, Volume\ndate (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n## TOPIXの算出が始まり、切りのいい1970年から算出\n# 年初始値と年末終値をベクトルにまとめるx\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 年度\nyears &lt;- 1970:2024\n\n# データフレーム化して見やすく表示\ntopix_df &lt;- data.frame(\n  Year = years,\n  Open = TOPIX_OPEN,\n  Close = TOPIX_CLOSE,\n  Return = round(topix_return * 100, 2)  # パーセント表示\n)\n\n# 期待収益率（年平均リターン）\nexpected_return &lt;- mean(topix_return)\n\n# 結果の表示\nprint(topix_df)\n\n   Year    Open   Close Return\n1  1970  179.30  148.35 -17.26\n2  1971  148.35  199.45  34.45\n3  1972  199.45  401.70 101.40\n4  1973  401.70  306.44 -23.71\n5  1974  306.44  278.34  -9.17\n6  1975  278.34  323.43  16.20\n7  1976  323.43  383.88  18.69\n8  1977  383.88  364.08  -5.16\n9  1978  364.08  449.55  23.48\n10 1979  449.55  459.61   2.24\n11 1980  459.61  494.10   7.50\n12 1981  494.10  570.31  15.42\n13 1982  570.31  593.72   4.10\n14 1983  593.72  731.82  23.26\n15 1984  731.82  913.37  24.81\n16 1985  913.37 1049.40  14.89\n17 1986 1049.40 1556.37  48.31\n18 1987 1556.37 1725.83  10.89\n19 1988 1725.83 2357.03  36.57\n20 1989 2357.03 2881.37  22.25\n21 1990 2881.37 1733.83 -39.83\n22 1991 1733.83 1714.68  -1.10\n23 1992 1714.68 1307.66 -23.74\n24 1993 1307.66 1439.31  10.07\n25 1994 1439.31 1559.09   8.32\n26 1995 1559.09 1577.70   1.19\n27 1996 1577.70 1470.94  -6.77\n28 1997 1470.94 1175.03 -20.12\n29 1998 1175.03 1086.99  -7.49\n30 1999 1086.99 1722.20  58.44\n31 2000 1722.20 1283.67 -25.46\n32 2001 1283.67 1032.14 -19.59\n33 2002 1032.14  843.29 -18.30\n34 2003  843.29 1043.69  23.76\n35 2004 1043.69 1149.63  10.15\n36 2005 1149.63 1649.76  43.50\n37 2006 1649.76 1681.07   1.90\n38 2007 1681.07 1475.68 -12.22\n39 2008 1475.68  859.24 -41.77\n40 2009  859.24  907.59   5.63\n41 2010  907.59  898.80  -0.97\n42 2011  898.80  728.61 -18.94\n43 2012  728.61  859.80  18.01\n44 2013  859.80 1302.29  51.46\n45 2014 1302.29 1407.51   8.08\n46 2015 1407.51 1547.30   9.93\n47 2016 1547.30 1518.61  -1.85\n48 2017 1518.61 1817.56  19.69\n49 2018 1817.56 1494.09 -17.80\n50 2019 1494.09 1721.36  15.21\n51 2020 1721.36 1804.68   4.84\n52 2021 1804.68 1992.33  10.40\n53 2022 1992.33 1891.71  -5.05\n54 2023 1891.71 2366.39  25.09\n55 2024 2366.39 2784.92  17.69\n\ncat(\"期待収益率（1970～2024年の平均）:\", round(expected_return * 100, 3), \"%\\n\")\n\n期待収益率（1970～2024年の平均）: 7.846 %\n\n# coefを計算（Returnの最大値に合わせる）\ncoef &lt;- max(topix_df$Close) / max(topix_df$Return)\n\n# pivot_longerで長い形式に\nTOPIX_df_long &lt;- pivot_longer(topix_df, cols = c(\"Close\", \"Return\"),\n                              names_to = \"項目\", values_to = \"値\")\n\nggplot(TOPIX_df_long, aes(x = Year, y = ifelse(項目 == \"Return\", 値 * coef, 値), color = 項目)) +\n  geom_line(size = 1) +\n  scale_y_continuous(\n    name = \"TOPIX指数\",\n    sec.axis = sec_axis(~ . / coef, name = \"値上がり率（%）\")\n  ) +\n  scale_color_manual(values = c(\"Close\" = \"blue\", \"Return\" = \"red\"),\n                     labels = c(\"TOPIX指数\", \"値上がり率（%）\")) +\n  labs(\n    title = \"1970年~2024年 TOPIX指数と値上がり率\",\n    x = \"年\",\n    color = \"\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "02_7150.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_7150.html#wacc加重平均資本コストの定義と重要性",
    "title": "7150_島根銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "02_7150.html#waccの構成要素の算出",
    "href": "02_7150.html#waccの構成要素の算出",
    "title": "7150_島根銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n## 島根銀行財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,303 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              25987 715020150311JP.csv\n 2     2 買入金銭債権                              499 715020150311JP.csv\n 3     3 有価証券                               103390 715020150311JP.csv\n 4     4 貸出金                                 258356 715020150311JP.csv\n 5     5 外国為替                                    5 715020150311JP.csv\n 6     6 リース債権及びリース投資資産             3580 715020150311JP.csv\n 7     7 その他資産                               1709 715020150311JP.csv\n 8     8 有形固定資産                             7060 715020150311JP.csv\n 9     9 建物                                      774 715020150311JP.csv\n10    10 土地                                     3918 715020150311JP.csv\n# ℹ 1,293 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"借用金\" | df$項目 == \"社債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 4351567 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 8416000 \nP &lt;- 459         \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 3862944000 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.32 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 1.08036867948469 # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 1.08 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 8.35 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "02_7150.html#waccの最終算出",
    "href": "02_7150.html#waccの最終算出",
    "title": "7150_島根銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 8.341 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "02_7150.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_7150.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "7150_島根銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額    FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 715020150315JP.csv     7787    -2086   9873\n 2 715020160315JP.csv    11044      741  10303\n 3 715020170315JP.csv      984    -3481   4465\n 4 715020180315JP.csv    -7252    10984 -18236\n 5 715020190315JP.csv   -16012     2709 -18721\n 6 715020200315JP.csv    31625   -22731  54356\n 7 715020210315JP.csv    52051    -9694  61745\n 8 715020220315JP.csv   -18986    -9470  -9516\n 9 715020230315JP.csv   -27555     2995 -30550\n10 715020240315JP.csv     6459     -794   7253\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]   9873  10303   4465 -18236 -18721  54356  61745  -9516 -30550   7253\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGR (過去 9年間): -3.37%\n \n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 7253 7253 7253 7253 7253\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 7253 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 86954 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): 86954 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 187.758 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "02_8349.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8349.html#wacc加重平均資本コストの定義と重要性",
    "title": "8349_東北銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "02_8349.html#waccの構成要素の算出",
    "href": "02_8349.html#waccの構成要素の算出",
    "title": "8349_東北銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/7161_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,437 × 4\n      No 項目         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金             159638 716120150311JP.csv\n 2     2 買入金銭債権              838 716120150311JP.csv\n 3     3 商品有価証券               26 716120150311JP.csv\n 4     4 有価証券               752854 716120150311JP.csv\n 5     5 貸出金                1600381 716120150311JP.csv\n 6     6 外国為替                  548 716120150311JP.csv\n 7     7 その他資産               6639 716120150311JP.csv\n 8     8 有形固定資産            24899 716120150311JP.csv\n 9     9 建物                     7907 716120150311JP.csv\n10    10 土地                    14406 716120150311JP.csv\n# ℹ 1,427 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"譲渡性預金\"  |df$項目 == \"借用金\" ,]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 24336824 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 13509963\nP &lt;- 1127          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 15225728301 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"その他の支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.118 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.612545762\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.613 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 5.414 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "02_8349.html#waccの最終算出",
    "href": "02_8349.html#waccの最終算出",
    "title": "8349_東北銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 5.406 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "02_8349.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8349.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8349_東北銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額     FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 716120150315JP.csv    20043   -14532   34575\n 2 716120160315JP.csv   -80784    58344 -139128\n 3 716120170315JP.csv    20683    42855  -22172\n 4 716120180315JP.csv   -63585    32639  -96224\n 5 716120190315JP.csv   -73709    84546 -158255\n 6 716120200315JP.csv    -7023    35390  -42413\n 7 716120210315JP.csv    96884   -84955  181839\n 8 716120220315JP.csv    28964    -7983   36947\n 9 716120230315JP.csv   -19967    19549  -39516\n10 716120240315JP.csv   -13850   129915 -143765\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]   34575 -139128  -22172  -96224 -158255  -42413  181839   36947  -39516\n[10] -143765\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] -143765 -143765 -143765 -143765 -143765\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): -143765 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): -2659463 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): -2659463 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 -944.224 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "02_8383.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8383.html#wacc加重平均資本コストの定義と重要性",
    "title": "8383_鳥取銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "02_8383.html#waccの構成要素の算出",
    "href": "02_8383.html#waccの構成要素の算出",
    "title": "8383_鳥取銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n## 鳥取銀行財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8383_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,196 × 4\n      No 項目         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金              54883 838320150311JP.csv\n 2     2 有価証券               185287 838320150311JP.csv\n 3     3 貸出金                 703766 838320150311JP.csv\n 4     4 外国為替                  366 838320150311JP.csv\n 5     5 劣後受益権              10021 838320150311JP.csv\n 6     6 その他資産               3163 838320150311JP.csv\n 7     7 有形固定資産            10836 838320150311JP.csv\n 8     8 建物                     2512 838320150311JP.csv\n 9     9 土地                     6908 838320150311JP.csv\n10    10 リース資産               1058 838320150311JP.csv\n# ℹ 1,186 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"借用金\" | df$項目 == \"社債\"|df$項目==\"譲渡性預金\"|df$項目==\"コールマネー及び売渡手形\"|df$項目==\"その他負債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 8826517 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 9619938\nP &lt;- 1285          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 12361620330 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"コールマネー利息及び売渡手形利息\"|df$項目==\"債券貸借取引支払利息\"|df$項目==\"その他の支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.191 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.580596357\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.581 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 5.214 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "02_8383.html#waccの最終算出",
    "href": "02_8383.html#waccの最終算出",
    "title": "8383_鳥取銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 5.21 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "02_8383.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8383.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8383_鳥取銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 9 × 4\n  年度               CFO_金額 CFI_金額    FCF\n  &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 838320150315JP.csv   -21145    15610 -36755\n2 838320160315JP.csv     3646    29919 -26273\n3 838320170315JP.csv      418   -18191  18609\n4 838320180315JP.csv   -11834    21639 -33473\n5 838320190315JP.csv    -8683    22208 -30891\n6 838320200315JP.csv   -14191    16077 -30268\n7 838320210315JP.csv    29461   -17479  46940\n8 838320220315JP.csv    12000    -8647  20647\n9 838320240315JP.csv    56655    -4002  60657\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n[1] -36755 -26273  18609 -33473 -30891 -30268  46940  20647  60657\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 60657 60657 60657 60657 60657\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 60657 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 1164206 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): 1164206 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 490.688 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "02_8537.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8537.html#wacc加重平均資本コストの定義と重要性",
    "title": "8537_大光銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "02_8537.html#waccの構成要素の算出",
    "href": "02_8537.html#waccの構成要素の算出",
    "title": "8537_大光銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,414 × 4\n      No 項目         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金              62783 853720150311JP.csv\n 2     2 商品有価証券              155 853720150311JP.csv\n 3     3 金銭の信託               2987 853720150311JP.csv\n 4     4 有価証券               361946 853720150311JP.csv\n 5     5 貸出金                 947038 853720150311JP.csv\n 6     6 外国為替                 2601 853720150311JP.csv\n 7     7 その他資産               9598 853720150311JP.csv\n 8     8 有形固定資産            14475 853720150311JP.csv\n 9     9 建物                     3076 853720150311JP.csv\n10    10 土地                    10539 853720150311JP.csv\n# ℹ 1,404 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"コールマネー及び売渡手形\"  |df$項目 == \"借用金\" |df$項目==\"社債\"|df$項目==\"その他負債\",]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 14056839 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 9671000\nP &lt;- 1628          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 15744388000 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"コールマネー及び売渡手形利息\"|df$項目==\"その他の支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.099 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 0.601711789\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 0.602 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 5.346 %\n\n\n\n\n\n1.2.10 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 5.342 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "02_8537.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8537.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8537_大光銀行",
    "section": "1.3 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.3 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.3.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額     FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 853720150315JP.csv   -19939    10642  -30581\n 2 853720160315JP.csv    13927   -10613   24540\n 3 853720170315JP.csv    -5855    25415  -31270\n 4 853720180315JP.csv       26   -11718   11744\n 5 853720190315JP.csv    44927    -3486   48413\n 6 853720200315JP.csv     -647   -12460   11813\n 7 853720210315JP.csv   143439    -1667  145106\n 8 853720220315JP.csv    -4192    10626  -14818\n 9 853720230315JP.csv  -139400     6615 -146015\n10 853720240315JP.csv     1598   -19399   20997\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]  -30581   24540  -31270   11744   48413   11813  145106  -14818 -146015\n[10]   20997\n\n\n\n\n1.3.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] 20997 20997 20997 20997 20997\n\n\n\n\n\n1.3.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): 20997 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): 393085 \n\n\n\n\n\n1.3.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): 393085 \n\n\n\n\n\n1.3.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 133.362 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "02_8562.html#wacc加重平均資本コストの定義と重要性",
    "href": "02_8562.html#wacc加重平均資本コストの定義と重要性",
    "title": "8562_福島銀行",
    "section": "1.1 WACC（加重平均資本コスト）の定義と重要性",
    "text": "1.1 WACC（加重平均資本コスト）の定義と重要性\nWACCは、企業が資金を調達するために株主や債権者に平均して支払うコストを表す。企業が将来生み出すフリーキャッシュフロー（FCF）を現在価値に割り引く際の割引率としてWACCを用いることで、企業が継続的に価値を創造するために最低限稼ぐべき収益率を反映した評価が可能となる。WACCの一般的な算出式は以下の通りである。\n\\[WACC = \\frac{D}{D+E} \\times r_D \\times (1-T) + \\frac{E}{D+E} \\times r_E\\]\nここで、各記号は以下の要素を示す。\n\n\\(D\\) : 負債総額\n\\(E\\) : 時価総額\n\\(r\\_D\\) : 負債コスト\n\\(r\\_E\\) : 株主資本コスト\n\\(T\\) : 実効税率",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "02_8562.html#waccの構成要素の算出",
    "href": "02_8562.html#waccの構成要素の算出",
    "title": "8562_福島銀行",
    "section": "1.2 WACCの構成要素の算出",
    "text": "1.2 WACCの構成要素の算出\nWACCを算出するためには、\\(D\\)、\\(E\\)、\\(r\\_D\\)、\\(r\\_E\\) の各要素を正確に特定する必要がある。\n\n1.2.1 前提データの準備\nまずは、分析に必要なライブラリを読み込み、財務データとTOPIXデータを準備します。\n\n# 必要なライブラリの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n##じもとホールディングス\n## 財務データ読み込み\ndf &lt;- read_csv(\"ProcessedBankData/8562_processed_data.csv\", show_col_types = FALSE)\n# TOPIX年次リターンデータの読み込み\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\nprint(df)\n\n# A tibble: 1,287 × 4\n      No 項目                         `金額（百万円）` ファイル名        \n   &lt;dbl&gt; &lt;chr&gt;                                   &lt;dbl&gt; &lt;chr&gt;             \n 1     1 現金預け金                              36795 856220150311JP.csv\n 2     2 商品有価証券                              106 856220150311JP.csv\n 3     3 金銭の信託                               1690 856220150311JP.csv\n 4     4 有価証券                               236007 856220150311JP.csv\n 5     5 貸出金                                 474227 856220150311JP.csv\n 6     6 外国為替                                  256 856220150311JP.csv\n 7     7 リース債権及びリース投資資産             2886 856220150311JP.csv\n 8     8 その他資産                               6307 856220150311JP.csv\n 9     9 有形固定資産                            11331 856220150311JP.csv\n10    10 建物                                     4685 856220150311JP.csv\n# ℹ 1,277 more rows\n\nprint(TOPIX)\n\n# A tibble: 57 × 6\n   Date        Open  High   Low Close Volume\n   &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1 1969-12-31  133.  179.  133.  179.      0\n 2 1970-12-31  183.  186.  147.  148.      0\n 3 1971-12-31  149.  209   148.  199.      0\n 4 1972-12-31  200.  402.  200.  402.      0\n 5 1973-12-31  404.  422.  285.  306.      0\n 6 1974-12-31  304.  342.  252.  278.      0\n 7 1975-12-31  276.  333.  268.  323.      0\n 8 1976-12-31  326.  384.  326.  384.      0\n 9 1977-12-31  384.  391.  350.  364.      0\n10 1978-12-31  364.  453.  364.  450.      0\n# ℹ 47 more rows\n\n\n\n\n\n1.2.2 負債総額 (\\(D\\)) の算出\nWACCにおける負債総額 (\\(D\\)) は、企業が利子を支払う義務のある負債、すなわち有利子負債を指す。銀行株を分析する際、預金については一般的な有利子負債とは性質が異なり、多くの場合、低金利で調達される。そのため、本評価においては、預金に対して通常の有利子負債とは異なる特定の金利を別途調査し、\\(r\\_D\\) の算出に際して適切に加味する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\n# 財務データから有利子負債の項目を抽出\nD_df_current_data &lt;- df[df$項目==\"預金\" | df$項目 == \"譲渡性預金\"  |df$項目 == \"借用金\"|df$項目==\"外国為替\" | df$項目 == \"社債\"  |df$項目 == \"その他負債\" ,]\nD &lt;- sum(as.numeric(D_df_current_data$`金額（百万円）`)) \n# 例として22行目と23行目の3列目を合計\n\n# 算出結果の確認\ncat(\"負債総額 (D):\", D, \"\\n\")\n\n負債総額 (D): 7605514 \n\n\n\n\n\n1.2.3 時価総額 (\\(E\\)) の算出\n時価総額 (\\(E\\)) は、評価対象企業の発行済み株式総数に現在の株価を乗じた値として算出する。\n\n# 発行済み株式総数:Nと現在の株価:Pを定義\nN &lt;- 34900000\nP &lt;- 232          \n# 時価総額の計算\nE &lt;- N * P\n\n# 算出結果の確認\ncat(\"時価総額 (E):\", E, \"\\n\")\n\n時価総額 (E): 8096800000 \n\n\n\n\n\n1.2.4 負債コスト (\\(r\\_D\\)) の算出\n負債コスト (\\(r\\_D\\)) は、企業が負債に対して支払う平均的な金利を指す。これは、主に支払利息の総額を負債総額で除することで算出される。銀行株の場合、前述の通り預金にかかる特定の金利も考慮に入れ、\\(D\\) と対応する利息コストを適切に計算する。 複数年度の平均(できれば加重平均をとることで偶発的な変動リスクを抑える)\n\nrD_Total_Debt &lt;- df[df$項目 == \"資金調達費用\" | df$項目 == \"預金利息\" | df$項目 == \"借用金利息\" | df$項目 == \"社債利息\"|df$項目==\"譲渡性預金利息\"|df$項目==\"その他の支払利息\"|df$項目==\"債券貸借取引支払利息\",]\nrD &lt;- sum(as.numeric(rD_Total_Debt$`金額（百万円）`)) / D # 例として42～44行目の3列目を合計しDで割る\n\n# 算出結果の確認\ncat(\"負債コスト (rD):\", round(rD * 100, 3), \"%\\n\")\n\n負債コスト (rD): 0.106 %\n\n\n\n\n\n1.2.5 株主資本コスト (\\(r\\_E\\)) の算出\n株主資本コスト (\\(r\\_E\\)) は、株主が企業に投資することで期待する最低限の収益率であり、一般的には資本資産評価モデル (CAPM: Capital Asset Pricing Model) を用いて算出される。\n\\[r_E = r_F + \\beta \\times (E_R - r_F)\\]\n\n\n1.2.6 リスクフリーレート (\\(r\\_F\\))\n日本では、通常、日本国債の利回りをその代理変数として用いる。これは、国債が信用リスクが極めて低い投資対象と見なされるためである。\n\n# リスクフリーレート (rF) の設定\n# 例として、現在の日本国債10年物利回りなどを設定します。\n# 実際の評価時点の最新の利回りを調べて入力してください。\nrF &lt;- 0.01570 # 例示の値 (1.57%)\n\n# 算出結果の確認\ncat(\"リスクフリーレート (rF):\", round(rF * 100, 3), \"%\\n\")\n\nリスクフリーレート (rF): 1.57 %\n\n\n\n\n1.2.7 β (ベータ)\n評価対象となる特定の株式が、市場全体の動きに対してどれだけ敏感に反応するかを示す指標である。\n\n# ベータ (β) の設定\n# 評価対象企業のβ値を調べて入力してください。beta.xlsxで計算済\nbeta &lt;- 1.114919103\n # 例示の値\n# 算出結果の確認\ncat(\"ベータ (β):\", round(beta, 3), \"\\n\")\n\nベータ (β): 1.115 \n\n\n\n\n1.2.8 市場リスクプレミアム (\\(E\\_R - r\\_F\\))\n市場全体の期待されるリターン (\\(E\\_R\\)) からリスクフリーレート (\\(r\\_F\\)) を差し引いたものであり、リスクを負って株式市場に投資する投資家が要求する追加リターンを意味する。\n\\(E\\_R\\) は、TOPIXが始まった1970年から2024年までの年次リターンの平均から求める。\n\n# TOPIXの年次リターン計算 (再掲、確認のため)\n# 年初始値と年末終値をベクトルにまとめる\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\n\n# 年次リターン（価格収益率）を計算\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\n\n# 期待収益率（年平均リターン） = 市場の期待リターン (Er)\nEr &lt;- mean(topix_return)\n\n# 市場リスクプレミアムの計算\nmarket_risk_premium &lt;- Er - rF\n\n# 算出結果の確認\ncat(\"市場の期待リターン (Er):\", round(Er * 100, 3), \"%\\n\")\n\n市場の期待リターン (Er): 7.846 %\n\ncat(\"市場リスクプレミアム (Er - rF):\", round(market_risk_premium * 100, 3), \"%\\n\")\n\n市場リスクプレミアム (Er - rF): 6.276 %\n\n\n\n\n1.2.9 株主資本コスト (\\(r\\_E\\)) の最終算出\n\n# 株主資本コスト (rE) の計算\nrE &lt;- rF + beta * market_risk_premium\n\n# 算出結果の確認\ncat(\"株主資本コスト (rE):\", round(rE * 100, 3), \"%\\n\")\n\n株主資本コスト (rE): 8.567 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "02_8562.html#waccの最終算出",
    "href": "02_8562.html#waccの最終算出",
    "title": "8562_福島銀行",
    "section": "1.3 WACCの最終算出",
    "text": "1.3 WACCの最終算出\n上記で計算した各要素 (\\(D\\), \\(E\\), \\(r\\_D\\), \\(r\\_E\\)) と実効税率 (\\(T\\)) を用いて、WACCを最終的に算出します。\n\n# 法人実効税率 (T) の設定\n# 最新の法人実効税率を調べて設定してください。\nT &lt;- 0.2320 # 例示の値 (23.20%)\n\n# WACCの計算\nWACC &lt;- D / (D + E) * rD * (1 - T) + E / (D + E) * rE\n\n# 算出結果の確認\ncat(\"加重平均資本コスト (WACC):\", round(WACC * 100, 3), \"%\\n\")\n\n加重平均資本コスト (WACC): 8.559 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "02_8562.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "href": "02_8562.html#フリーキャッシュフロー-fcf-の推計と企業価値の算出",
    "title": "8562_福島銀行",
    "section": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出",
    "text": "1.4 フリーキャッシュフロー (FCF) の推計と企業価値の算出\n割引率であるWACCが算出できたら、次に企業の将来のフリーキャッシュフロー（FCF）を推計し、それらをWACCで現在価値に割り引くことで企業価値を算出します。\n\n1.4.1 フリーキャッシュフロー (FCF) の定義と推計\nフリーキャッシュフローは、企業が営業活動によって生み出したキャッシュのうち、事業の維持・拡大に必要な投資を行った後に残るキャッシュのことであり、株主や債権者に自由に分配可能なキャッシュフローを指します。一般的には、営業活動によるキャッシュ・フロー ＋ 投資活動によるキャッシュ・フローとして簡易的に計算されます。\n\n# 営業活動によるキャッシュ・フロー (CFO) の抽出\nCFO &lt;- df[df$項目 == \"営業活動によるキャッシュ・フロー\",]\n# 投資活動によるキャッシュ・フロー (CFI) の抽出\nCFI &lt;- df[df$項目 == \"投資活動によるキャッシュ・フロー\",]\n# ここでは、簡便的に過去データを利用していますが、実務では詳細な予測モデルを構築します。\nCFO &lt;- CFO %&gt;% rename(年度 = ファイル名) \nCFI &lt;- CFI %&gt;% rename(年度 = ファイル名) \nFCF_combined_df &lt;- inner_join(\n  CFO %&gt;% select(年度, CFO_金額 = `金額（百万円）`), # CFOデータから年度と金額（CFO_金額としてリネーム）を選択\n  CFI %&gt;% select(年度, CFI_金額 = `金額（百万円）`), # CFIデータから年度と金額（CFI_金額としてリネーム）を選択\n  by = \"年度\"\n) |&gt; \n  mutate(FCF = CFO_金額 - CFI_金額) |&gt; \n  mutate(FCF = replace_na(FCF, 0)) |&gt; \n  arrange(年度)\n\nFCF_past &lt;- FCF_combined_df$FCF\n# 計算されたFCFのデータフレームを確認\ncat(\"各年度のフリーキャッシュフロー (FCF):\\n\")\n\n各年度のフリーキャッシュフロー (FCF):\n\nprint(FCF_combined_df)\n\n# A tibble: 10 × 4\n   年度               CFO_金額 CFI_金額    FCF\n   &lt;chr&gt;                 &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 856220150315JP.csv    26020   -14975  40995\n 2 856220160315JP.csv   -11250    70193 -81443\n 3 856220170315JP.csv   -11859     4047 -15906\n 4 856220180315JP.csv   -19942     1057 -20999\n 5 856220190315JP.csv    25292    14227  11065\n 6 856220200315JP.csv   -39120    15236 -54356\n 7 856220210315JP.csv    39072   -23078  62150\n 8 856220220315JP.csv    13184   -14219  27403\n 9 856220230315JP.csv    -7431    -6454   -977\n10 856220240315JP.csv     1184     1489   -305\n\n# FCFの値をベクトルとして取り出す（今後の予測モデルや企業価値計算で使用するため）\n# この FCF_past が、将来FCF予測の基礎データとなります。\nFCF_past &lt;- FCF_combined_df$FCF\n\ncat(\"\\nFCF_past (ベクトル形式):\\n\")\n\n\nFCF_past (ベクトル形式):\n\nprint(FCF_past)\n\n [1]  40995 -81443 -15906 -20999  11065 -54356  62150  27403   -977   -305\n\n\n\n\n1.4.2 将来フリーキャッシュフローの予測\n\n# 既に計算済みの FCF_past ベクトルを使用\nfirst_fcf &lt;- FCF_past[1]\nlast_fcf &lt;- FCF_past[length(FCF_past)]\nnum_periods &lt;- length(FCF_past) - 1 # 10年データなら9期間\n\nif (first_fcf &lt;= 0 || last_fcf &lt;= 0 || num_periods == 0) {\n  warning(\"FCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\")\n  cagr_fcf &lt;- NA\n} else {\n  cagr_fcf &lt;- (last_fcf / first_fcf)^(1 / num_periods) - 1\n}\n\nWarning:\nFCFが0以下の値を含む、または期間が不十分なため、CAGRの計算が不正確になる可能性があります。\n\ncat(\"--- 過去のFCF年平均成長率 (CAGR) ---\\n\")\n\n--- 過去のFCF年平均成長率 (CAGR) ---\n\nif (!is.na(cagr_fcf)) {\n  cat(sprintf(\"CAGR (過去 %d年間): %.2f%%\\n\", num_periods, cagr_fcf * 100), \"\\n\")\n} else {\n  cat(\"CAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\\n\")\n}\n\nCAGRは計算できませんでした (FCFが0以下、または期間が不十分)。\n\n# 明示的予測期間の設定（例として5年間とします）\nforecast_period &lt;- 5\n\n# 永久成長率 (g) の設定\n# 企業の長期的な安定成長率を仮定します (0%～2%程度が一般的)。\ng &lt;- 0 # 例示の値 (1%)\n# 将来FCFの予測値の計算\n# 過去のFCFの最終年度の値を基準に、一定の成長率で予測します。\n# FCF_pastの最後の値が最新年度のFCF実績値であると仮定します。\nlast_FCF_actual &lt;- FCF_past[length(FCF_past)]\n\nFCF_forecast &lt;- numeric(forecast_period)\nif (forecast_period &gt; 0) {\n  FCF_forecast[1] &lt;- last_FCF_actual * (1 + g) # 予測1年目 (最終実績値から1期成長)\n  for (i in 2:forecast_period) {\n    FCF_forecast[i] &lt;- FCF_forecast[i-1] * (1 + g)\n  }\n} else {\n  message(\"予測期間が0または負の値のため、FCF予測は行われません。\")\n}\n\ncat(\"将来FCF予測 (簡易モデル -\", forecast_period, \"年間):\\n\")\n\n将来FCF予測 (簡易モデル - 5 年間):\n\nprint(round(FCF_forecast, 0))\n\n[1] -305 -305 -305 -305 -305\n\n\n\n\n\n1.4.3 ターミナルバリュー (TV) の算出\nターミナルバリューは、明示的に予測する期間（ここでは10年間）以降の、企業が永続的に生み出すと仮定されるフリーキャッシュフローの現在価値の合計を表します。ゴードン成長モデルを用いて算出します。\n\\[TV = \\frac{FCF_{N+1}}{WACC - g}\\]\nここで、\\(FCF\\_{N+1}\\) は最終予測年度の翌年のFCF、\\(WACC\\) は加重平均資本コスト、\\(g\\) は永久成長率です。\n\n# 最終予測年度の翌年 (forecast_period + 1 年目) のFCF (FCF_N_plus_1) を計算\nif (forecast_period &gt; 0) {\n  FCF_N_plus_1 &lt;- FCF_forecast[forecast_period] * (1 + g)\n} else {\n  FCF_N_plus_1 &lt;- last_FCF_actual * (1 + g)\n}\n\n# ターミナルバリュー (TV) の計算\nif (WACC - g &lt;= 0) {\n  warning(\"WACC - g が0以下になるため、ターミナルバリューの計算が適切ではありません。\")\n  TV &lt;- NA\n} else {\n  TV &lt;- FCF_N_plus_1 / (WACC - g)\n}\n\ncat(\"最終予測年度の翌年のFCF (FCF_N_plus_1):\", round(FCF_N_plus_1, 0), \"\\n\")\n\n最終予測年度の翌年のFCF (FCF_N_plus_1): -305 \n\ncat(\"ターミナルバリュー (TV):\", round(TV, 0), \"\\n\")\n\nターミナルバリュー (TV): -3563 \n\n\n\n\n\n1.4.4 企業価値 (Valuation) の算出\n各年度のフリーキャッシュフローとターミナルバリューをWACCで現在価値に割り引き、合計することで企業価値を算出します。\n\n# 企業価値の計算 (予測FCFの現在価値 + TVの現在価値)\nValuation &lt;- 0\n\n# 明示的予測期間のFCFの現在価値を合計\nif (forecast_period &gt; 0) {\n  for (i in 1:forecast_period) {\n    Valuation &lt;- Valuation + FCF_forecast[i] / (1 + WACC)^i\n  }\n}\n\n# ターミナルバリューの現在価値を加算\nif (!is.na(TV)) {\n  Valuation &lt;- Valuation + TV / (1 + WACC)^forecast_period\n} else {\n  message(\"ターミナルバリューが計算できないため、企業価値の計算はTVを含んでいません。\")\n}\n\ncat(\"DCF法による企業価値評価 (Valuation):\", round(Valuation, 0), \"\\n\")\n\nDCF法による企業価値評価 (Valuation): -3563 \n\n\n\n\n\n1.4.5 時価総額とFCF\n\nFCF_E &lt;- last_fcf / (E/1e6)\ncat(\"時価総額フリーキャッシュフロー比率\", round(FCF_E * 100, 3), \"%\\n\")\n\n時価総額フリーキャッシュフロー比率 -3.767 %",
    "crumbs": [
      "企業価値評価",
      "DCF法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "03_7150_RIM.html",
    "href": "03_7150_RIM.html",
    "title": "7150_島根銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\n# データのエンコーディングに合わせて locale を指定\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    33    23727\n2    35    57234\n3    36    16195\n4    37    28224\n5    39    31835\n6    40     2383\n7    41     2125\n8    43    17480\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.08036867948469\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.35 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.02 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 864.14 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 17,480 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -8,217.29 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -8,398.57 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "03_7150_RIM.html#残余利益モデルの概要",
    "href": "03_7150_RIM.html#残余利益モデルの概要",
    "title": "7150_島根銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "03_7150_RIM.html#前提データの準備",
    "href": "03_7150_RIM.html#前提データの準備",
    "title": "7150_島根銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\n# データのエンコーディングに合わせて locale を指定\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    33    23727\n2    35    57234\n3    36    16195\n4    37    28224\n5    39    31835\n6    40     2383\n7    41     2125\n8    43    17480\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.08036867948469\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.35 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.02 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 864.14 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 17,480 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -8,217.29 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -8,398.57 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "7150_島根銀行"
    ]
  },
  {
    "objectID": "03_8349_RIM.html",
    "href": "03_8349_RIM.html",
    "title": "8349_東北銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8349_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    38225\n2    36   112361\n3    37   140482\n4    38    72677\n5    39     1698\n6    40     3071\n7    41    12703\n8    42     5659\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.612545762\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.414 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 27,486.08 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,659 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 6,108.72 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 15,718.36 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "03_8349_RIM.html#残余利益モデルの概要",
    "href": "03_8349_RIM.html#残余利益モデルの概要",
    "title": "8349_東北銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "03_8349_RIM.html#前提データの準備",
    "href": "03_8349_RIM.html#前提データの準備",
    "title": "8349_東北銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8349_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    38225\n2    36   112361\n3    37   140482\n4    38    72677\n5    39     1698\n6    40     3071\n7    41    12703\n8    42     5659\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.612545762\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.414 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 27,486.08 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,659 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 6,108.72 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 15,718.36 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8349_東北銀行"
    ]
  },
  {
    "objectID": "03_8383_RIM.html",
    "href": "03_8383_RIM.html",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8383_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37    47641\n2    38   225693\n3    39    46022\n4    41    85224\n5    42     2262\n6    43    19380\n7    44     3319\n8    46    16578\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.580596357\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.214 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 13,042.52 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 16,578 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 1,726.54 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -5,262.02 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "03_8383_RIM.html#残余利益モデルの概要",
    "href": "03_8383_RIM.html#残余利益モデルの概要",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "03_8383_RIM.html#前提データの準備",
    "href": "03_8383_RIM.html#前提データの準備",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8383_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37    47641\n2    38   225693\n3    39    46022\n4    41    85224\n5    42     2262\n6    43    19380\n7    44     3319\n8    46    16578\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.580596357\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.214 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 13,042.52 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 16,578 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 1,726.54 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -5,262.02 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8383_鳥取銀行"
    ]
  },
  {
    "objectID": "03_8537_RIM.html",
    "href": "03_8537_RIM.html",
    "title": "8537_大光銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38    73242\n2    39   147341\n3    40   141497\n4    42    59880\n5    43   137175\n6    44   144040\n7    46    19031\n8    47    33113\n9    48    27244\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.601711789\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.346 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 18,132.62 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 27,244 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 3,170.38 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -12,281.76 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "03_8537_RIM.html#残余利益モデルの概要",
    "href": "03_8537_RIM.html#残余利益モデルの概要",
    "title": "8537_大光銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "03_8537_RIM.html#前提データの準備",
    "href": "03_8537_RIM.html#前提データの準備",
    "title": "8537_大光銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38    73242\n2    39   147341\n3    40   141497\n4    42    59880\n5    43   137175\n6    44   144040\n7    46    19031\n8    47    33113\n9    48    27244\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.601711789\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.346 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 18,132.62 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 27,244 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 3,170.38 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -12,281.76 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8537_大光銀行"
    ]
  },
  {
    "objectID": "03_8562_RIM.html",
    "href": "03_8562_RIM.html",
    "title": "8562_福島銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8562_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    61103\n2    36    59409\n3    37   118622\n4    39    48096\n5    40    -4372\n6    41     -812\n7    43     5795\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.114919103\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.567 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 6,425.17 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,795 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 140.51 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 489.66 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "03_8562_RIM.html#残余利益モデルの概要",
    "href": "03_8562_RIM.html#残余利益モデルの概要",
    "title": "8562_福島銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "03_8562_RIM.html#前提データの準備",
    "href": "03_8562_RIM.html#前提データの準備",
    "title": "8562_福島銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8562_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    61103\n2    36    59409\n3    37   118622\n4    39    48096\n5    40    -4372\n6    41     -812\n7    43     5795\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.114919103\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.567 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 6,425.17 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,795 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 140.51 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 489.66 百万円",
    "crumbs": [
      "企業価値評価",
      "RIM法",
      "8562_福島銀行"
    ]
  },
  {
    "objectID": "04_7150_DDM.html",
    "href": "04_7150_DDM.html",
    "title": "7150_島根銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\n# データのエンコーディングに合わせて locale を指定\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    33    23727\n2    35    57234\n3    36    16195\n4    37    28224\n5    39    31835\n6    40     2383\n7    41     2125\n8    43    17480\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.08036867948469\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.35 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.02 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 864.14 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 17,480 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -8,217.29 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -8,398.57 百万円"
  },
  {
    "objectID": "04_7150_DDM.html#残余利益モデルの概要",
    "href": "04_7150_DDM.html#残余利益モデルの概要",
    "title": "7150_島根銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_7150_DDM.html#前提データの準備",
    "href": "04_7150_DDM.html#前提データの準備",
    "title": "7150_島根銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\n# データのエンコーディングに合わせて locale を指定\ndf &lt;- read_csv(\"ProcessedBankData/7150_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    33    23727\n2    35    57234\n3    36    16195\n4    37    28224\n5    39    31835\n6    40     2383\n7    41     2125\n8    43    17480\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.08036867948469\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.35 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.02 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    34              648\n 2    36              694\n 3    39             1031\n 4    37              633\n 5    38              365\n 6    36            -2279\n 7    39              357\n 8    37              294\n 9    36              419\n10    37              420\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 864.14 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 17,480 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: -8,217.29 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -8,398.57 百万円"
  },
  {
    "objectID": "04_8349_DDM.html",
    "href": "04_8349_DDM.html",
    "title": "8349_東北銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8349_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    38225\n2    36   112361\n3    37   140482\n4    38    72677\n5    39     1698\n6    40     3071\n7    41    12703\n8    42     5659\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.612545762\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.414 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 27,486.08 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,659 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 6,108.72 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 15,718.36 百万円"
  },
  {
    "objectID": "04_8349_DDM.html#残余利益モデルの概要",
    "href": "04_8349_DDM.html#残余利益モデルの概要",
    "title": "8349_東北銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8349_DDM.html#前提データの準備",
    "href": "04_8349_DDM.html#前提データの準備",
    "title": "8349_東北銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8349_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    38225\n2    36   112361\n3    37   140482\n4    38    72677\n5    39     1698\n6    40     3071\n7    41    12703\n8    42     5659\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.612545762\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.414 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1347\n 2    40             1960\n 3    39             1795\n 4    38              618\n 5    38              908\n 6    38             1111\n 7    35             1149\n 8    37             1337\n 9    39             1526\n10    38             1376\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 27,486.08 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,659 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 6,108.72 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 15,718.36 百万円"
  },
  {
    "objectID": "04_8383_DDM.html",
    "href": "04_8383_DDM.html",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8383_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37    47641\n2    38   225693\n3    39    46022\n4    41    85224\n5    42     2262\n6    43    19380\n7    44     3319\n8    46    16578\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.580596357\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.214 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 13,042.52 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 16,578 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 1,726.54 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -5,262.02 百万円"
  },
  {
    "objectID": "04_8383_DDM.html#残余利益モデルの概要",
    "href": "04_8383_DDM.html#残余利益モデルの概要",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8383_DDM.html#前提データの準備",
    "href": "04_8383_DDM.html#前提データの準備",
    "title": "8383_鳥取銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8383_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 8 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    37    47641\n2    38   225693\n3    39    46022\n4    41    85224\n5    42     2262\n6    43    19380\n7    44     3319\n8    46    16578\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.580596357\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.214 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 9 × 2\n     No `金額（百万円）`\n  &lt;dbl&gt;            &lt;dbl&gt;\n1    40             2137\n2    38             1992\n3    37             1311\n4    36             1108\n5    38              957\n6    38              898\n7    35             1008\n8    40              901\n9    37             1062\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 13,042.52 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 16,578 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 1,726.54 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -5,262.02 百万円"
  },
  {
    "objectID": "04_8537_DDM.html",
    "href": "04_8537_DDM.html",
    "title": "8537_大光銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38    73242\n2    39   147341\n3    40   141497\n4    42    59880\n5    43   137175\n6    44   144040\n7    46    19031\n8    47    33113\n9    48    27244\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.601711789\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.346 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 18,132.62 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 27,244 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 3,170.38 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -12,281.76 百万円"
  },
  {
    "objectID": "04_8537_DDM.html#残余利益モデルの概要",
    "href": "04_8537_DDM.html#残余利益モデルの概要",
    "title": "8537_大光銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8537_DDM.html#前提データの準備",
    "href": "04_8537_DDM.html#前提データの準備",
    "title": "8537_大光銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8537_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 9 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    38    73242\n2    39   147341\n3    40   141497\n4    42    59880\n5    43   137175\n6    44   144040\n7    46    19031\n8    47    33113\n9    48    27244\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 0.601711789\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 5.346 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             1637\n 2    40             3004\n 3    38             3180\n 4    37             3579\n 5    39             2609\n 6    39             1165\n 7    37             1596\n 8    40             2074\n 9    39             1315\n10    39             1740\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 18,132.62 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 27,244 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 3,170.38 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: -12,281.76 百万円"
  },
  {
    "objectID": "04_8562_DDM.html",
    "href": "04_8562_DDM.html",
    "title": "8562_福島銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]\n\n\n\n\n\n# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8562_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    61103\n2    36    59409\n3    37   118622\n4    39    48096\n5    40    -4372\n6    41     -812\n7    43     5795\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.114919103\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.567 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 6,425.17 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,795 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 140.51 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 489.66 百万円"
  },
  {
    "objectID": "04_8562_DDM.html#残余利益モデルの概要",
    "href": "04_8562_DDM.html#残余利益モデルの概要",
    "title": "8562_福島銀行",
    "section": "",
    "text": "残余利益モデルは、企業の株式価値を現在の自己資本の簿価と、将来の超過利益の割引現在価値の合計として算出\n\n企業の純利益から自己資本が生み出すべき正常な利益を差し引いたものである。残余の部分が株主にとっての追加的な価値を生み出すと考えられる。\n\n\\[ \\begin{align*}\\text{株式価値} =\\ & C_0 + \\frac{A_1 - r_e C_0}{1 + r_e} + \\frac{A_2 - r_e C_1}{(1 + r_e)^2} + \\frac{A_3 - r_e C_2}{(1 + r_e)^3} + \\cdots\\end{align*} \\]\n\n\\(C_t\\)：\\(t\\)期末の自己資本簿価\n\\(C_{t-1}\\)：\\(t{-}1\\)期末（すなわち\\(t\\)期首）の自己資本簿価\n\\(A_t\\)：\\(t\\)期の当期純利益\n\\(d_t\\)：\\(t\\)期の配当\n\\(r_e\\):株主が要求するリターン率。CAPM(資本資産価格モデル)を用いて算出\n\n自己資本の変動は、事業活動による利益（\\(A_t\\)）の増加と、株主への配当（\\(d_t\\)）による減少によって決まります。\n\\[ C_t = C_{t-1} + A_t - d_t\\ \\]"
  },
  {
    "objectID": "04_8562_DDM.html#前提データの準備",
    "href": "04_8562_DDM.html#前提データの準備",
    "title": "8562_福島銀行",
    "section": "",
    "text": "# パッケージの読み込み\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# データの読み込み\n# 列名が自動的に変換されないように、check.names = FALSE を設定\ndf &lt;- read_csv(\"ProcessedBankData/8562_processed_data.csv\", show_col_types = FALSE)\nTOPIX &lt;- read_csv(\"^tpx_y.csv\", show_col_types = FALSE)\n\n# データの列名を確認\nprint(\"dfの列名:\")\n\n[1] \"dfの列名:\"\n\nprint(names(df))\n\n[1] \"No\"             \"項目\"           \"金額（百万円）\" \"ファイル名\"    \n\n\n\n# 当期純利益（Net_Income）の抽出\n# 項目名が複数ある場合もまとめて抽出\nNet_Income_U &lt;- df %&gt;%\n  filter(項目 %in% c(\"当期純利益\", \"当期純利益又は当期純損失（△）\")) %&gt;%\n  slice(which(row_number() %% 2 != 0)) %&gt;%\n  select(No, `金額（百万円）`)\n\n# 自己資本簿価（Net_assets）の抽出\n# 株主資本合計とその他の包括利益累計額合計を年度（No）ごとに合算\nNet_assets &lt;- df %&gt;%\n  filter(項目 %in% c(\"株主資本合計\", \"その他の包括利益累計額合計\")) %&gt;%\n  group_by(No) %&gt;%\n  summarise(自己資本 = sum(`金額（百万円）`), .groups = 'drop')\n\n# 抽出したデータの確認\nprint(\"抽出された当期純利益データ:\")\n\n[1] \"抽出された当期純利益データ:\"\n\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\nprint(\"抽出された自己資本簿価データ:\")\n\n[1] \"抽出された自己資本簿価データ:\"\n\nprint(Net_assets)\n\n# A tibble: 7 × 2\n     No 自己資本\n  &lt;dbl&gt;    &lt;dbl&gt;\n1    35    61103\n2    36    59409\n3    37   118622\n4    39    48096\n5    40    -4372\n6    41     -812\n7    43     5795\n\n# C0（最も直近の自己資本簿価）の定義\nC0 &lt;- tail(Net_assets$自己資本, 1)\n\n\nrf &lt;- 0.01570\nbeta &lt;- 1.114919103\nTOPIX_OPEN &lt;- TOPIX$Close[1:55]\nTOPIX_CLOSE &lt;- TOPIX$Close[2:56]\ntopix_return &lt;- (TOPIX_CLOSE - TOPIX_OPEN) / TOPIX_OPEN\nEr &lt;- mean(topix_return, na.rm = TRUE) # 欠損値があれば除去\nmarket_risk_premium &lt;- Er - rf\nrE &lt;- rf +  beta * market_risk_premium\ncat(\"株主資本コスト(rE):\", round(rE * 100,3), \"%\\n\")\n\n株主資本コスト(rE): 8.567 %\n\n\n\n# 計算に必要な変数の定義\nn &lt;- nrow(Net_Income_U)\npayout_ratio &lt;- 0.30\ng &lt;- 0.03 # 永久成長率\n\n# 各期の自己資本簿価を格納するベクトル\nC &lt;- c(C0, rep(NA, n))\n# 各期の残余利益の現在価値を格納するベクトル\npv_residual_income &lt;- rep(NA, n)\n\n# ループ処理で各期の残余利益と現在価値を計算\nfor (t in 1:n) {\n  # 当期純利益 (A_t)\n  A_t &lt;- Net_Income_U$`金額（百万円）`[t]\n  \n  # 残余利益 (RI_t) = 当期純利益 - rE * 期首の自己資本簿価\n  residual_income_t &lt;- A_t - rE * C[t]\n  \n  # t期の残余利益の現在価値を計算\n  pv_residual_income[t] &lt;- residual_income_t / (1 + rE)^t\n  \n  # 次期（t+1期）の期首自己資本簿価を計算\n  # クリーン・サープラス関係: C_t = C_{t-1} + A_t - d_t\n  # d_t = 配当性向 * A_t と仮定\n  if (t &lt; n) {\n    C[t+1] &lt;- C[t] + A_t * (1 - payout_ratio)\n  }\n}\nprint(Net_Income_U)\n\n# A tibble: 10 × 2\n      No `金額（百万円）`\n   &lt;dbl&gt;            &lt;dbl&gt;\n 1    39             3453\n 2    40             2681\n 3    39             1254\n 4    41            -3120\n 5    38              532\n 6    37              413\n 7    38            -1717\n 8    38              833\n 9    34              879\n10    35              869\n\n# 最終期の残余利益\nlast_residual_income &lt;- A_t - rE * C[n]\n# 継続価値（Terminal Value）の計算\nterminal_value &lt;- last_residual_income * (1 + g) / (rE - g)\npv_terminal_value &lt;- terminal_value / (1 + rE)^n\n\n# 株式価値の計算\nequity_value &lt;- C0 + sum(pv_residual_income) + pv_terminal_value\n\n# 結果の出力\ncat(\"\\n--- RIMによる企業価値評価結果 ---\\n\")\n\n\n--- RIMによる企業価値評価結果 ---\n\ncat(\"株式価値:\", format(round(equity_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n株式価値: 6,425.17 百万円\n\ncat(\"  - C0（現在の自己資本簿価）:\", format(round(C0, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - C0（現在の自己資本簿価）: 5,795 百万円\n\ncat(\"  - 将来の残余利益の現在価値合計:\", format(round(sum(pv_residual_income), 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 将来の残余利益の現在価値合計: 140.51 百万円\n\ncat(\"  - 継続価値の現在価値:\", format(round(pv_terminal_value, 2), big.mark = \",\"), \"百万円\\n\")\n\n  - 継続価値の現在価値: 489.66 百万円"
  },
  {
    "objectID": "10_Environment.html",
    "href": "10_Environment.html",
    "title": "環境設定",
    "section": "",
    "text": "sessionInfo()\n\nR version 4.4.2 (2024-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=Japanese_Japan.utf8  LC_CTYPE=Japanese_Japan.utf8   \n[3] LC_MONETARY=Japanese_Japan.utf8 LC_NUMERIC=C                   \n[5] LC_TIME=Japanese_Japan.utf8    \n\ntime zone: Asia/Tokyo\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] htmlwidgets_1.6.4 compiler_4.4.2    fastmap_1.2.0     cli_3.6.4        \n [5] tools_4.4.2       htmltools_0.5.8.1 rstudioapi_0.17.1 yaml_2.3.10      \n [9] rmarkdown_2.29    knitr_1.49        jsonlite_1.8.9    xfun_0.50        \n[13] digest_0.6.37     rlang_1.1.5       evaluate_1.0.3   \n\n# 使用したパッケージのリスト\nsearch()\n\n[1] \".GlobalEnv\"        \"package:stats\"     \"package:graphics\" \n[4] \"package:grDevices\" \"package:utils\"     \"package:datasets\" \n[7] \"package:methods\"   \"Autoloads\"         \"package:base\"     \n\nrequired_packages &lt;- c(\"tidyverse\",\"\")"
  }
]